/*
auto-generated by: https://github.com/react-spring/gltfjsx
*/

import * as THREE from "three"
import React, { useRef } from "react"
import { useLoader, useFrame, useThree } from "react-three-fiber"
import { GLTFLoader } from "three/examples/jsm/loaders/GLTFLoader"
import matcap from "./public/matcap.png"

export default function LogoModel({ props }) {
  const ref = useRef()
  useFrame(state => {
    const time = state.clock.getElapsedTime()
    ref.current.rotation.x = Math.sin(time / 2) * 0.08
    ref.current.rotation.y = Math.cos(time / 2) * -0.08
    ref.current.position.x = Math.cos(time / 2) * 0.08
    ref.current.position.y = Math.sin(time / 2) * -0.08
  })
  const { nodes, materials } = useLoader(GLTFLoader, "/heroexport.glb")
  const [map] = useLoader(THREE.TextureLoader, [matcap])
  return (
    <group ref={ref} {...props} dispose={null}>
      <mesh material={materials.Material} geometry={nodes.Logo.geometry}>
        <meshMatcapMaterial attach="material" matcap={map} />
      </mesh>
    </group>
  )
}
//<meshMatcapMaterial attach="material" matcap={map} /></mesh>
//const [map] = useLoader(THREE.TextureLoader, [matcap])
//import matcap from "./public/matcap.png"
