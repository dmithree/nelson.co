/*
auto-generated by: https://github.com/react-spring/gltfjsx
*/

import * as THREE from "three"
import React, { useRef } from "react"
import { useLoader } from "react-three-fiber"
import { GLTFLoader } from "three/examples/jsm/loaders/GLTFLoader"
import matcap from "./public/matcap.png"

export default function Model(props) {
  const group = useRef()
  const { nodes, materials } = useLoader(GLTFLoader, "/heroexport.glb")
  const [map] = useLoader(THREE.TextureLoader, [matcap])
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh material={nodes.Cursor.material} geometry={nodes.Cursor.geometry}>
        <meshMatcapMaterial attach="material" matcap={map} />
      </mesh>
      <mesh material={materials.Matcap} geometry={nodes.Diamond.geometry}>
        <meshMatcapMaterial attach="material" matcap={map} />
      </mesh>
      <mesh material={materials.Matcap} geometry={nodes.hammer.geometry}>
        <meshMatcapMaterial attach="material" matcap={map} />
        <mesh material={materials.Matcap} geometry={nodes.wrap.geometry}>
          <meshMatcapMaterial attach="material" matcap={map} />
        </mesh>
      </mesh>
      <mesh material={materials.Matcap} geometry={nodes.Pencil.geometry}>
        <meshMatcapMaterial attach="material" matcap={map} />
        <mesh material={materials.Matcap} geometry={nodes.green002.geometry}>
          <meshMatcapMaterial attach="material" matcap={map} />
          <mesh material={materials.Matcap} geometry={nodes.eraser.geometry}>
            <meshMatcapMaterial attach="material" matcap={map} />
          </mesh>
        </mesh>
      </mesh>
      <mesh material={materials.Material} geometry={nodes.Logo.geometry}>
        <meshMatcapMaterial attach="material" matcap={map} />
      </mesh>
    </group>
  )
}
//<meshMatcapMaterial attach="material" matcap={map} /></mesh>
//const [map] = useLoader(THREE.TextureLoader, [matcap])
//import matcap from "./public/matcap.png"
