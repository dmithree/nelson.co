<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title><![CDATA[Gavin Nelson]]></title>
        <description><![CDATA[Gavin Nelson]]></description>
        <link>https://nelson.co</link>
        <image>
            <url>https://nelson.co/images/meta/og.png</url>
            <title>Gavin Nelson</title>
            <link>https://nelson.co</link>
        </image>
        <generator>RSS for Node</generator>
        <lastBuildDate>Sun, 06 Jun 2021 15:33:04 GMT</lastBuildDate>
        <atom:link href="https://nelson.co/feed.xml" rel="self" type="application/rss+xml"/>
        <language><![CDATA[en]]></language>
        <item>
            <title><![CDATA[Blender Basics]]></title>
            <description><![CDATA[
# Blender Basics

#### Updated February 2021

<ZContainer>
  <Ztext
    depth="5rem"
    direction="both"
    event="pointer"
    eventRotation="40deg"
    eventDirection="default"
    fade={false}
    layers={120}
    perspective="500px"
  >
    <Cube>
      <rect width="192" height="192" fill="var(--text-primary)" />
    </Cube>
  </Ztext>
</ZContainer>

Blender is a powerful, [open source](https://github.com/blender) 3D creation tool.
While the comprehensive [docs](https://docs.blender.org/manual/en/latest/) are wonderful,
figuring out where to begin can be a challenge if you are new to the software. This
page is intended to be an ongoing list of Blender wrangling tips that I find valuable,
written from the perspective of someone who already sifted through the noise as a
beginner.

## General

#### My base file configuration

- Render with a transparent background by toggling `Transparent` in Properties panel → Render Properties tab → Film → Transparent.
- Access global contrast settings in Properties panel → Render Properties tab → Color Management → Look dropdown. I find bumping up the contrast to `Medium High Contrast` is a good starting point.
- Hover over a corner of an editor section and your cursor will display as a +. Click and drag to split the section into two and select the dropdown icon in the upper left of any section to choose the editor type. Blender's UI is customizable to your liking.

## Keyboard Shortcuts

### General

- `spacebar` brings up a spotlight esq. menu search.
- `shift + a` brings up the Add menu at your cursor.
- `x` deletes the selected item.
- `option + z` toggles x-ray view. I find this so useful when modeling that I mapped the toggle to a button on my mouse.
- `tab` toggles between Object mode and Edit mode. Object mode is used for manipulating whole meshes/objects, while edit mode will allow manipulation of individual vertices, edges, and faces.
  - In Edit mode, `1` toggles vertex selection mode, `2` toggles edge selection mode, and `3` toggles face selection mode.
- Clicking and dragging (left/right) on a numerical input field will adjust the input.
  - Holding `control` while doing this will lock the field to whole numbers (or easy decimals).
  - Holding `shift` while doing this will allow for fine adjustments.
- `n` toggles the transform panel.
- `right click` on a menu option to add it to your `quick favorites`.
  - `q` brings up a list of your quick favorites.

### Transform Keys

- `g` for grab - move selected objects or points within the 3D space.
- `r` for rotate - rotate selected objects within the 3D space.
- `s` for scale - scale selected objects larger (mouse away from origin) or smaller (mouse towards origin).
- Holding `shift` while performing a transform will allow for fine adjustments.
- In Edit mode, with vertices selected, double pressing `g` will slide vertices along the connected edge.

### Axis Keys

- `x` locks a previously selected transform key transform to the x axis.
- `y` locks a previously selected transform key transform to the y axis.
- `z` locks a previously selected transform key transform to the z axis.
- `shift + axis key` locks a previously selected transform key transform to the other two axes. Ex. `g → shift + z` will allow moving the selected object on only the x and y axes.
- Double pressing an axis key locks the axis of transform to the objects normal rather than the world axis. Ex. `s → x → x` will scale the selected object on _the object's_ x axis, rather than the world's x axis.

### Pie Menus

Pie menus are circular UI selection menus that appear on a keypress at the cursor. Moving the cursor away from the menu's origin will select the designated menu item. Getting used to using these and forming muscle memory will speed up your workflow significantly.

- `~` invokes the viewpoint pie menu. Use this to change your view to the camera, selected object, or any orthographic direction.
- `z` invokes the viewport shading pie menu. Use this to change your viewport shading between wireframe, solid, material preview, and rendered.

## Modeling

### General

- `right click` an object and select `shade smooth` to achieve smooth shading on a curved surface.
  - Prevent smoothing over edges above a chosen angle by toggling `Auto Smooth` in Properties panel → Normals tab → Normals → Auto Smooth. This is helpful when you are working with a shape that needs both curves and hard edges.
- When modeling, try to stick to creating and manipulating objects that are made of Quads (4 vertices per face) rather than Tris (3 vertices per face) or Ngons ( > 4 vertices per face). This will make working with modifier properties easier.
  - The default sphere mesh is made of Tris. To create a sphere composed of Quads, start with a cube, apply a Subdivision Surface modifier with 4 subdivisions, and then apply a Cast modifier.
- `set origin` (easily accessed through the spacebar quick search) will allow you to change the transform origin of an object.
- `control + r` in Edit mode will allow you to create a loop cut. This is a _very_ helpful tool to use when you are trying to manipulate meshes and need some extra vertices to work with.

### Modifier Properties

All Modifier Properties are found in the Modifier Properties tab of the Properties panel. Below are the general modifiers that I find most helpful for basic modeling. Experiment by applying them to default meshes to learn the ins and outs of each modifier.

<br></br>

#### Note - clicking apply after selecting a modifier is a destructive action. Often you do not need to apply modifiers and can work non-destructively.

- `Bevel` - used to bevel edges of the selected object.
  - Bevel Limit Method - a helpful tool to limit what edges are beveled. `Angle` is useful to limit beveling to only sharp edges (defined by a degree input). `Weight` will let you bevel only selected edges by weight. Weight is assigned to edges in edit mode in the transform panel under "Edge Data."
- `Subdivision Surface` - used to subdivide all faces of the selected object. Great for creating curved surfaces from angled meshes.
  - Assign creases to edges in edit mode in the transform panel under "Edge Data."
- `Solidify` - used to give a third dimension to two dimensional meshes non-destructively.
- `Mirror` - used to mirror a copy of a mesh over a selected object and axis. Use this to easily create symmetrical meshes.
- If you have previously explored design tools like [Sketch](https://www.sketch.com) and [Figma](https://www.figma.com), you may have used the Boolean Operation tool. Blender has a similar `Boolean` operation modifier, but I would recommend trying to avoid it when you are first starting. It has a tendency to create messy geometry in your meshes and screw things up when used in combo with a Subdivision modifier.

## Shading

Open up a `Shader Editor` editor to use Blender's node based shading. Node editors can get complicated fast. To keep it simple, stick with the `Principled BDSF` shader that is added when you create a new material.

- The best way to learn shading is to experiment with all the sliders in the `Principled BDSF` node.
  - The primary values I find myself editing are Base Color, Metallic, and Roughness.

## Concluding Thoughts

Start small. Don't jump right into creating involved models and complex shading trees. The learning curve for Blender can be steep, but getting these core basics nailed down will help make the experience enjoyable.
]]></description>
            <link>https://nelson.co/posts/blenderbasics</link>
            <guid isPermaLink="true">https://nelson.co/posts/blenderbasics</guid>
            <dc:creator><![CDATA[Gavin Nelson]]></dc:creator>
            <pubDate>Mon, 01 Feb 2021 05:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Digital Tools]]></title>
            <description><![CDATA[
# Digital Tools

#### Originally posted May 2021

A collection of the digital tools I use on a near daily basis.

<br></br>

## Design

<Tool
  link="https://www.figma.com/"
  image="figma.svg"
  name="Figma"
  description="My primary product design tool. Features like Auto Layout and Component Variants are must-haves."
/>

<Tool
  link="https://www.sketch.com"
  image="sketch.svg"
  name="Sketch"
  description="My tool of choice for most icon design needs because of things like negative spread shadows and excellent vector editing."
/>

<Tool
  link="https://www.blender.org"
  image="blender.svg"
  name="Blender"
  description="I turn to Blender when I need to create a textured 3D element for an icon or just to roughly model a scene to get things in proper perspective."
/>

<br></br>

## Development

<Tool
  link="https://code.visualstudio.com"
  image="vscode.svg"
  name="VS Code"
  description="It's hard to beat the plugin ecosystem and the settings profile syncing to other VS Code instances such as Codespaces."
/>

<Tool
  link="https://iterm2.com"
  image="iterm.png"
  name="iTerm"
  description="Preferences → Appearance → Panes → Side Margins and Top and Bottom Margins = 16. I don't know how anyone uses a terminal without this."
/>

<Tool
  link="https://github.com/gavinmn"
  image="github.svg"
  name="GitHub"
  description="I use GitHub for all my development needs. I hear GitHub also has a great mobile app 😉"
/>

<Tool
  link="https://vercel.com/"
  image="vercel.svg"
  name="Vercel"
  description="Blazing fast, incredibly easy to manage — Vercel hosts and deploys everything I have on the web."
/>

<Tool
  link="https://plausible.io"
  image="plausible.png"
  name="Plausible"
  description="Lightweight web analytics without feeling slimy."
/>

<br></br>

## Productivity

<Tool
  link="https://www.craft.do"
  image="craft.png"
  name="Craft"
  description="My go to note taking / second brain tool. It's native (and web!), blazing fast, and just so well designed. Writing is an underrated design tool and all my writing happens in Craft."
/>

<Tool
  link="https://culturedcode.com/things/"
  image="things.png"
  name="Things"
  description="A shining example of attention to detail, Things helps me get things done."
/>

<Tool
  link="https://flexibits.com/fantastical"
  image="fantastical.png"
  name="Fantastical"
  description="Fantastical is a beautifully designed app with tons of great quality of life features."
/>

<Tool
  link="https://raycast.com"
  image="raycast.svg"
  name="Raycast"
  description="I only recently added Raycast to my workflow but I have been blown away by what is possible with it so far. Between integrations and custom scripts, everything I need is suddenly a few keystrokes away."
/>

<br></br>

## Reading

<Tool
  link="https://feedbin.com"
  image="feedbin.svg"
  name="Feedbin"
  description="Long live RSS. Feedbin is the best combo of form + function for an RSS reader out there."
/>

<Tool
  link="https://www.instapaper.com"
  image="instapaper.png"
  name="Instapaper"
  description="Anything I want to read online first gets sent to Instapaper so it can be read when I have time, in a distraction free environment, with a digital highlighter."
/>

<Tool
  link="https://readwise.io"
  image="readwise.svg"
  name="Readwise"
  description="Readwise is a fantastic tool to make the most out of your time spent reading. I review a handful of highlights that I save to it every day, and use the Markdown export to bring those passages into my notes."
/>

<Tool
  link="https://beta.readng.co/user/gmn"
  image="readng.png"
  name="Readng"
  description="I've been using Readng to keep track of what I am reading, what I want to read, and what friends are recommending I read. It's a great web app from an indie team."
/>

<br></br>

## General

<Tool
  link="https://mymind.com"
  image="mymind.svg"
  name="mymind"
  description="I have almost 2000 images, tweets, quotes, photos, websites, etc. saved in here and the best part is that it's easy to find any single item. My go to resources for inspiration."
/>

<Tool
  link="https://cleanshot.com"
  image="cleanshot.png"
  name="Cleanshot"
  description="By far my most used utility app. Cleanshot has an insane amount of great features and just works seamlessly. Not sure how I managaed screenshots before it."
/>

<Tool
  link="https://www.macbartender.com"
  image="bartender.png"
  name="Bartender"
  description="I'm somewhat obsessive about keeping my technology neat and tidy. Bartender is a must."
/>

<Tool
  link="https://1password.com"
  image="1pw.png"
  name="1Password"
  description="I get nervous when I hear a friend isn't using 1Password. Its autofill extensions make using secure passwords seamless."
/>

<Tool
  link="https://www.apple.com/apple-music/"
  image="applemusic.svg"
  name="Apple Music"
  description="Apple Music's focus on albums over tracks and playlists put it above Spotify for me."
/>

Have any tools you think I should try out? [Send me a recommendation!](https://twitter.com/gavmn)
]]></description>
            <link>https://nelson.co/posts/digital-tools</link>
            <guid isPermaLink="true">https://nelson.co/posts/digital-tools</guid>
            <dc:creator><![CDATA[Gavin Nelson]]></dc:creator>
            <pubDate>Tue, 01 Jun 2021 04:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Get Things Done]]></title>
            <description><![CDATA[
# Get Things Done

#### Published February 2021

<CustomImage
  size="small"
  width="444"
  height="160"
  src="/images/posts/gtdimage.png"
/>

I’ve been using [Things](https://culturedcode.com/things/) for years to manage tasks, projects, and just general _things_. The app is based loosely off the principles of _Getting Things Done_, a book that promotes a productivity framework of capturing, organizing, and acting on tasks and ideas. The high level ideas of Getting Things Done mesh well with how I naturally operate, but I find learning and sticking to every little part of the system is a sizable project in and of itself.

<br />

Instead, I work with a modification of the GTD system that is pared down to its basics with the goal of being simple enough to stick to, but just involved enough to be effective. My minimal framework was made specifically for use with Things, but you should be able to use most task management platforms (or even pencil and paper) to implement it.

---

## Collection

Start by forming the habit of collecting your tasks and ideas the moment you think of them. Toss them all into the Things _Inbox_ and worry about triage and organization later. The Inbox functions as the unstructured collection of all new items that have yet to be taken through triage. Do whatever you can to minimize the friction of recording actionable tasks to the Inbox. A get things done system is no good if you can’t remember what you have to get done.

<CustomImage
  size="small"
  width="444"
  height="160"
  src="/images/posts/gtdimage2.png"
/>

## Triage

At least once a day, go through the Inbox and triage its contents based on the following questions:

- Is it an item that is actionable and can be completed?
- Will it take more than one action to complete?
- What broad _Area_ does it belong to?
- When does it need to be done?

### Is it an item that is actionable and can be completed?

You’ll notice a lot of this framework (and GTD as a whole) hinges on _next action_ items. Next action items should be the immediate next physical, visible action that you can take to get closer to completing the task. This will help remove abstraction from tasks and projects, which I find tend to cause stress and procrastination.

<br />

So if your Inbox item being triaged is a clear action item itself, perfect. If not, either reframe the item as something actionable, discard it, or move it to your notes.

### Will it take more than one action to complete?

If an item will take more than one action to complete, turn it into a project. The golden rule with a project is to make sure that it always contains a _next action item_. If you complete all of the tasks within the project, you’ve either completed the project, or there are more action items to add.

### What broad Area does the task belong to?

Take a second during triage to move tasks to Things’ _Areas_ as well*.* Areas serve to function as a means of high level organization. For example, I have _Personal, Design, Website,_ and _Work_ areas that hold all relevant projects and tasks. These areas can be fluid - create them and delete them as needed, but try and keep the number of areas down and their scope broad. If it takes you more than a split second to decide what Area something belongs in, your Areas probably aren't broad enough.

### When does it need to be done?

It’s important not to overthink this one. If you don’t immediately know a specific day or date that the item has to be completed on, don’t assign it a date. Toss it in Things’ _Today_ list if it needs to be done today, otherwise leave it in the default _Anytime_ list.

## Reviewing

<CustomImage
  size="small"
  width="444"
  height="160"
  src="/images/posts/gtdimage3.png"
/>

After tasks are collected and sorted, it’s time to review them and get started on completing them. My system relies on two reviews - one every day, and one every week. I like to complete the daily review every morning as I’m starting my day and the weekly review every Sunday night before the start of the next work week, but you can do whatever works best for you. Neither of these should take more than a few minutes once you get the hang of it.

### Weekly Review

For the weekly review, focus on identifying things you want to get done _this week_. During this review you will sort both the Someday list and the Anytime list. Open up both lists and organize all of their contents by the following rules:

- If you need to get it done this week, move it to the Anytime list.
- If you do not need to get it done this week, move it to the Someday list.

That’s it. Simple enough, right? While doing this, I also like to double check that all projects and tasks are based on next actionable items just incase I missed something or was lazy during triage.

### Daily Review

For the daily review, focus on identifying things you want to get done _today._ This is when you will further sort the Anytime list, and fill out the Today list. The rules for this review are very simple as well:

- If you need to get the item done today, move it to the Today list.
- Don’t overload the Today list.

Start with just a small number of tasks. If you complete everything on your Today list, you can always dive back into the Anytime list to grab more tasks, but having a seemingly endless list of tasks in the Today list is a good way to get stressed out and abandon Things altogether.

---

That is the core of my minimal framework. It may sound like a lot while reading through it, but in reality the whole thing takes a few minutes a day to organize. There are more levels of detail you can go to with things like tags for items, but try not to go overboard. I have a `work` tag that gets automatically assigned to every item in my _Work_ area to allow for easy filtering while I’m working, but that’s it.

<br />

The simpler you can keep it, the easier it is to stick to it.
]]></description>
            <link>https://nelson.co/posts/get-things-done</link>
            <guid isPermaLink="true">https://nelson.co/posts/get-things-done</guid>
            <dc:creator><![CDATA[Gavin Nelson]]></dc:creator>
            <pubDate>Mon, 01 Feb 2021 05:00:00 GMT</pubDate>
        </item>
    </channel>
</rss>